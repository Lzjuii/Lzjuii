#include <iostream>
using namespace std;

//斐波拉契递归实现 
int Fipolachie(int n)
{
 if(n==0)
 {
  return 1;
 }
 if(n==1)
 {
  return 1;
  } 
  for(int i=2;i<=n;i++)
  {
   return Fipolachie(n-1)+Fipolachie(n-2); 
  }
}

//斐波拉契递推的实现
int  Fipolachie1(int n)
{
 if(n==0)
 {
  return 1;
 }
 if(n==1)
 {
  return 1;
 } 
 int Prepre=1;
 int pre=1;
 int result;
 for(int i=2;i<=n;i++)
 {
  result=Prepre+pre;
  Prepre=pre;
  pre=result;
 }
 return result;
}

int main(int argc, char** argv) {
 cout<<Fipolachie(5)<<endl;
 cout<<Fipolachie1(5)<<endl;
 return 0;
}
复杂度分析: 在递推方法中，时间复杂度T(n)=O(n),空间复杂度S(n)=O(1)
