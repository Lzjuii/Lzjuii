#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <cstdlib>
using namespace std;

void CountSort(vector<int> & vec)
{
    if (vec.empty())
    {
        return ;
    }
    else
    {
        // 1、计算最大值和最小值
        int max = *max_element(vec.begin(), vec.end());
        int min = *min_element(vec.begin(), vec.end());
        // 2、开辟长度为（max - min + 1）的数组，即为计数排序的空间复杂度
        vector<int> countArray (max - min + 1, 0); 
        // 3、遍历数组计数
        for (int i = 0; i < vec.size(); ++i)
        {
            ++countArray[vec[i] - min];
        }
        // 4、排序.clear
        vec.clear();
        for (int i = 0; i < countArray.size(); ++i)
        {
            for (int j = 0; j < countArray[i]; ++j)
            {
                vec.push_back(min + i);
            }
        }
        return ;
    }
}

int main()
{
    vector<int> vec = {4, 5, 2, 3, 1, 7, 6, 8, 10, 9, 8, 9, 4};
    for (int i = 0; i < vec.size(); ++i)
    {
        cout << vec[i] << '\t';
    }
    cout << endl;
    CountSort(vec);
    for (int i = 0; i < vec.size(); ++i)
    {
        cout << vec[i] << '\t';
    }

    cout << endl;
}
